name: Auto Rebase Next onto Develop

on:
  push:
    branches:
      - develop

jobs:
  rebase-next:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Fetch all branches
        run: |
          git fetch --all
          git checkout develop
          git pull origin develop
          git log --pretty=format:"%h -%an, %ai : %s" | head -n 5

      - name: Create new branch for rebase
        run: |
          BRANCH_NAME="rebase-next-$(date +%s)"
          git checkout next
          git log --pretty=format:"%h -%an, %ai : %s" | head -n 5
          git checkout -b "$BRANCH_NAME"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Rebase ${{ env.BRANCH_NAME }} onto develop
        run: |
          git rebase develop
          git log --pretty=format:"%h -%an, %ai : %s" | head -n 10
        continue-on-error: true # Continue even if conflicts occur

      - name: Handle merge conflicts (if any)
        run: |
          while [ -n "$(git status --porcelain)" ]; do
            # Add all files with conflict markers
            git add -u
            GIT_SEQUENCE_EDITOR=true GIT_EDITOR=true git rebase --continue
            if [ $? -ne 0 ]; then
              echo "Rebase failed or completed"
              break
            fi
          done

      - name: Push rebased branch
        run: git push -f origin ${{ env.BRANCH_NAME }}

      - name: Create pull request
        uses: thomaseizinger/create-pull-request@master
        with:
          github_token: ${{ secrets.ASSOCIATION_RELEASE_TOKEN }}
          head: ${{ env.BRANCH_NAME }}
          base: next
          title: 'Auto-rebase: next onto latest develop'
          body: |
            This PR is automatically created by the auto-rebase workflow. It rebased the next branch onto latest develop and raised the PR including all merge conflicts.
            Please review and merge it.

            **NOTE:** Merge conflicts are not resolved in this PR and the commits from next needs to be resigned.

            Once all the merge conflicts are resolved and commits from next branch have been signed, you can use the following commands to merge this PR:
            ```
            git branch -f next ${{ env.BRANCH_NAME }}
            git push -f origin next
            ```

            The above command will forcefully move the `next` branch to top of this PR head and merge the PR.
