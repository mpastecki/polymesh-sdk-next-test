name: Auto Rebase Next onto Develop

on:
  push:
    branches:
      - develop

jobs:
  check-for-bc-branches:
    runs-on: ubuntu-latest
    outputs:
      has_bc_branches: ${{ steps.check.outputs.has_bc_branches }}
      bc_branches: ${{ steps.check.outputs.bc_branches }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for active bc-* branches
        id: check
        run: |
          git fetch --all
          BC_BRANCHES=$(git branch -r | grep -E 'origin/bc-[0-9]+-' | sed 's/origin\///' | tr '\n' ' ')

          if [[ -n "$BC_BRANCHES" ]]; then
            echo "has_bc_branches=true" >> "$GITHUB_OUTPUT"
            echo "bc_branches=$BC_BRANCHES" >> "$GITHUB_OUTPUT"
            echo "⚠️ Found active bc-* branches: $BC_BRANCHES"
            echo "Auto-rebase of next branch will be skipped to avoid conflicts with breaking changes."
          else
            echo "has_bc_branches=false" >> "$GITHUB_OUTPUT"
            echo "bc_branches=" >> "$GITHUB_OUTPUT"
            echo "✅ No active bc-* branches found. Auto-rebase can proceed."
          fi

  notify-bc-branches-present:
    runs-on: ubuntu-latest
    needs: check-for-bc-branches
    if: needs.check-for-bc-branches.outputs.has_bc_branches == 'true'
    steps:
      - name: Create informational issue
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const bcBranches = '${{ needs.check-for-bc-branches.outputs.bc_branches }}';
            const title = 'ℹ️ Auto-rebase skipped - Breaking change branches active';
            const body = `# Auto-rebase Temporarily Disabled

            Auto-rebasing of the \`next\` branch onto \`develop\` has been automatically disabled because active breaking change branches were detected:

            ${bcBranches.split(' ').filter(b => b).map(b => `- \`${b}\``).join('\n')}

            ## Why This Happens

            When bc-* branches are active, auto-rebasing the \`next\` branch could:
            - Interfere with the breaking change integration process
            - Create conflicts with the ephemeral integration branches
            - Lead to inconsistent state between \`next\` and the integrated breaking changes

            ## What This Means

            - The \`next\` branch will not be automatically updated until all bc-* branches are integrated
            - Breaking changes will be properly integrated through the next major release process
            - Auto-rebasing will resume once all bc-* branches are processed and integrated

            ## Next Steps

            1. Let the breaking change integration process complete
            2. After successful integration, bc-* branches will be cleaned up
            3. Auto-rebasing will automatically resume on the next push to develop

            This is normal operation and requires no action from maintainers.

            ---
            **Auto-generated by**: Auto-rebase workflow`;

            // Check if similar issue already exists
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'auto-rebase,breaking-changes'
            });

            const existingIssue = issues.find(issue =>
              issue.title.includes('Auto-rebase skipped') &&
              issue.labels.some(label => label.name === 'auto-rebase')
            );

            if (existingIssue) {
              // Update existing issue
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: existingIssue.number,
                body: body
              });
              console.log(`Updated existing issue #${existingIssue.number}`);
            } else {
              // Create new issue
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: body,
                labels: ['auto-rebase', 'breaking-changes', 'automated']
              });
              console.log('Created new informational issue');
            }

  rebase-next:
    needs: check-for-bc-branches
    if: needs.check-for-bc-branches.outputs.has_bc_branches == 'false'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Fetch all branches
        run: |
          git fetch --all
          git checkout develop
          git pull origin develop
          git log --pretty=format:"%h -%an, %ai : %s" | head -n 5

      - name: Create new branch for rebase
        run: |
          BRANCH_NAME="rebase-next-$(date +%s)"
          git checkout next
          git log --pretty=format:"%h -%an, %ai : %s" | head -n 5
          git checkout -b "$BRANCH_NAME"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Rebase branch onto develop
        run: |
          git rebase develop
          git log --pretty=format:"%h -%an, %ai : %s" | head -n 10
        continue-on-error: true # Continue even if conflicts occur

      - name: Handle merge conflicts (if any)
        run: |
          while true; do
            if [ -d ".git/rebase-merge" ] || [ -d ".git/rebase-apply" ]; then
              # Add all files with conflict markers
              git add .
              if ! GIT_SEQUENCE_EDITOR=true GIT_EDITOR=true git rebase --continue; then
                echo "Rebase step completed or failed"
                if [ -d ".git/rebase-merge" ] || [ -d ".git/rebase-apply" ]; then
                  echo "Rebase still in progress, continuing..."
                  continue
                else
                  echo "Rebase completed successfully"
                  break
                fi
              fi
            else
              echo "No rebase in progress"
              break
            fi
          done

      - name: Push rebased branch
        run: git push -f origin "$BRANCH_NAME"

      - name: Create pull request
        uses: thomaseizinger/create-pull-request@master
        with:
          github_token: ${{ secrets.ASSOCIATION_RELEASE_TOKEN }}
          head: "${{ env.BRANCH_NAME }}"
          base: next
          title: 'Auto-rebase: next onto latest develop'
          body: |
            This PR is automatically created by the auto-rebase workflow. It rebased the next branch onto latest develop and raised the PR including all merge conflicts.
            Please review and merge it.

            **NOTE:** Merge conflicts are not resolved in this PR and the commits from next needs to be resigned.

  close-auto-rebase-issues:
    needs: check-for-bc-branches
    if: needs.check-for-bc-branches.outputs.has_bc_branches == 'false'
    runs-on: ubuntu-latest
    steps:
      - name: Close auto-rebase informational issues
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Close any open auto-rebase informational issues since we can now rebase
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'auto-rebase,breaking-changes'
            });

            for (const issue of issues) {
              if (issue.title.includes('Auto-rebase skipped')) {
                await github.rest.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  state: 'closed'
                });

                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  body: '✅ Auto-rebase has resumed - no more active bc-* branches detected.'
                });

                console.log(`Closed issue #${issue.number}`);
              }
            }